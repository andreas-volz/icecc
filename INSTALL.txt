Updated: $Id: INSTALL.txt,v 1.4 2002/06/08 11:31:04 jp Exp $

INSTALLATION FROM SOURCE
------------------------

I've tried to automate the build process as much as possible, but as I
only really do a lot of building on linux, building on other systems
will probably take a little effort (unless it is also a unix like
MacOS X :). Of course it is possible, and not altogether that
difficult; after all, I have built at least once on each of these
systems. The easiest way (and the way I did it) is to get some
standard unix tools.

General Requirements
--------------------

- basic unix tools: cp, mkdir, rm, and tar or zip
  GNU versions work best, you can try substituting things
  like DOS commands (fiddle with the appropriate Makefile)

- build tools: make and a c compiler
  Again, prefereably GNU make and GCC

- a jdk: javac, jar
  Get one from sun here: http://java.sun.com/j2se/1.3/
  Or you can use IBM's, Blackdown's, whatever. There is one for
  MacOS X, see Apple's developer pages (and boy does Swing look
  sweet in Aqua :)

- some time to kill (hopefully it will be painless, but I don't
  guarantee it :)


Linux x86
---------

To build type:

  make

To create a tarball archive ready for distribution type:

  make dist

These instructions should work on any other unix too (use the MacOS X
Makefile if you're building on a big endian machine though). It should
also be trivial to edit the other Makefiles (.win32, .mac, .macosx) to
insert a cross-compiler (just change the CC variable to your
cross-compiler executable and DS to the directory separator on the
system you're building on). Then you don't have to bother building on 
the target system.


Windows 98/NT
-------------

Download and install a unix like environment. Lazy people can just install 
the full version of Cygwin:

http://www.cygwin.com

Mingw32 is the better choice:

http://agnes.dida.physik.uni-essen.de/~janjaap/mingw32/

See Requirements above for specific programs you need. Once you have
everything set up type:

  make -f Makefile.win32

To make a zip file ready for distribution:

  make -f Makefile.win32 dist

You may get some errors and will have to fiddle with the
Makefile. Just try changing the options to something more sane (in
Makefile.win32).


MacOS 8/9
---------

I dunno. I have a skeleton Makefile.mac for filling in later, but I
doubt it works as written. You're probably best off asking your local
mac programmer about it using the instructions below about
'Alternative Build Methods'.


MacOS X
-------

Easy as long as you have Apple's developer tools (they should include
the standard GNU tools). In a terminal in this directory type:

  make -f Makefile.macosx macosx-app

To make a zipped tarball:

  make -f Makefile.macosx dist macosx-pkg

Gotta love the bsd part of the new Mac. :)


Alternative Build Methods
-------------------------

Everything is written in a portable fashion (pure ANSI C and
Java), so if you don't like this build method, you can always use your
favorite project manager. Generally, you need to compile all the c
files seperately, link once with everything except icecc.o to create
the decompiler and once with everything except icedc.o to create the
compiler. To create the gui, just compile everything in the
com/campaigncreations/IceCCUI directory. The main class is IceCCUI. I
chose to stick all of it in a jar file; you can if you like, but you
don't have to.

- Jeff Pang <jp@magnus99.dhs.org>
